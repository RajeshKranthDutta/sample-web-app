name: Build and Deploy to AKS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: |
        docker build -t k8steamcontainerregistry.azurecr.io/sample-web-app:${{ github.sha }} .

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: k8steamcontainerregistry.azurecr.io
        username: ${{ secrets.AZURE_USERNAME }}
        password: ${{ secrets.AZURE_PASSWORD }}

    - name: Push Docker image to ACR
      run: |
        docker push k8steamcontainerregistry.azurecr.io/sample-web-app:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/setup-azurecli@v2  # Correct reference
      

    - name: Log in to Azure
      run: az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_SECRET }} --tenant ${{ secrets.AZURE_TENANT }}

    - name: Set AKS credentials
      run: az aks get-credentials --resource-group gpuk8srg --name k8s4gpu

    - name: Deploy to AKS
      run: |
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml